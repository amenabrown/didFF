#iDiscretize
df2<-iDiscretize(data,"statenum","wage","year","treated_in_period","population", "overallcountpc") #ok
#iDensity
df3<-iDensity(df2,2007,2015)#ok
View(df3)
load_all()
df <- haven::read_dta("/Volumes/GoogleDrive/My Drive/Brown/Jon Roth/testform/Data/MW_cengiz_et_al_2019.dta")
#Define treated quarter following Cengiz et al 2019
# Nominal minimum wage goes up (DMW > 0)
# Change in real MW (DMW_real) > 25c
# Impacts more than 2% of workforce (toosmall != 1)
# Not a federal increase (fedincrease == 0)
df$treated_quarter <- ifelse(
!is.na(df$DMW_real) &
df$DMW_real> 0.25 &
df$DMW > 0 &
(is.na(df$toosmall) | df$toosmall!=1) &
( (df$fedincrease == 0) | is.na(df$fedincrease) ),
1,
0
)
#Define Treated year
df <- df %>%
dplyr::group_by(wagebinstate) %>%
dplyr::mutate(treated_year = treated_quarter +
dplyr::lag(treated_quarter, n=1) +
dplyr::lag(treated_quarter, n=2) +
dplyr::lag(treated_quarter, n=3)
)
data <- df %>%
dplyr::select(wagebins, #the wage bin
statenum, #the state
year, #year,
quarterdate, #quarter
overallcountpc, #employment per capita in wage bin,
treated_quarter, #was state treated (quarterly)
treated_year, # Was state treated (cumulative for the last 4 quarters)
L0logmw, #actual log mw
MW, #actual MW
population,#population
wtoverall1979 # fixed 1979 weights
) %>%
dplyr::mutate(treated = treated_quarter,
wage=as.numeric(wagebins),
weight=population*overallcountpc) %>%
dplyr::group_by(statenum) %>%
dplyr::mutate(treated_in_period = max(treated > 0))# Define the treatment level we will use
#Test
#iDiscretize
df2<-iDiscretize(data,"statenum","wage","year","treated_in_period","population", "overallcountpc") #ok
#iDensity
df3<-iDensity(df2,2007,2015)#ok
df3<-iDensity(df2,2007,2015)#ok
load_all()
df3<-iDensity2(df2,2007,2015)#ok
load_all()
df3<-iDensity2(df2,2007,2015)#ok
df3<-iDensity(df2,2007,2015)#ok
View(df3)
#iDiscretize
df2<-iDiscretize(data,"statenum","wagebins","year","treated","population", "overallcountpc") #ok
#
df3<-iDensity(df2,2007,2015)#ok
plot1<-iDensityPlot(df3,2007,2015)#ok
view(plot1)
View(plot1)
plot1
plot1+
scale_x_continuous(breaks = seq(from = 5,to=30, by = 5))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 5,to=30, by = 5))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 500,to=3000, by = 25))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 500,to=2800, by = 25))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 300,to=2800, by = 25))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 300,to=2800, by = 100))
plot1+
ggplot2::scale_x_continuous(breaks = seq(from = 300,to=2800, by = 200))
load_all()
plot1<-iDensityPlot(df3,2007,2015, 500,3000)#ok
load_all()
plot1<-iDensityPlot(df3,2007,2015, 500,3000)#ok
df3
load_all()
plot1<-iDensityPlot(df3,2007,2015, 500,3000)#ok
plot1
TestFunctionalForm(data,"statenum","wagebin","year","treated","pupulation",
numBootstrapDraws=1000,
starting_yeaar=2010,
ending_year=2015)
TestFunctionalForm(data,"statenum","wagebin","year","treated","pupulation",
numBootstrapDraws=1000,
starting_year=2010,
ending_year=2015)
TestFunctionalForm(data,"statenum","wagebin","year","treated","pupulation",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
TestFunctionalForm(DF=data,"statenum","wagebin","year","treated","pupulation",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
TestFunctionalForm(DF=data, idvar="statenum",yvar="wagebin",tvar="year",treatmentvar = "treated",weight = "pupulation", scale = overallcountpc,
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data, idvar="statenum",yvar="wagebin",tvar="year",treatmentvar = "treated",weight = "pupulation", scale = overallcountpc,
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
df2<-iDiscretize(data,"statenum","wagebins","year","treated","population", "overallcountpc") #ok
#iDensity
df3<-iDensity(df2,2007,2015)#ok
df2<-iDiscretize(data,"statenum","wagebin","year","treated","population", "overallcountpc") #ok
df2<-iDiscretize(data,"statenum","wagebins","year","treated","population", "overallcountpc") #ok
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc")
iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=NULL,
ending_year=NULL)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,nbins=NULL,
starting_year=NULL,
ending_year=NULL)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
View(df3)
rlang::last_error()
rlang::last_trace()
df2
df2<-iDiscretize(data,"statenum","wagebins","year","treated","population", "overallcountpc") #ok
df2
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
df2
rlang::last_trace()
df2<-iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
View(df2)
boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
View(bootdf)
bootdf<-boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
unique(bootdf$idvar)
unique(bootdf$bootstrap_id)
unique(data$id)
unique(data$statenum)
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2007,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2007,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
check()
usethis::use_package("Hmisc")
load_all()
check()
install()
load_all()
install()
load_all()
install()
load_all()
install()
library(devtools)
use_r("iplotTable")
load_all()
check()
install()
load_all()
check()
load_all()
library(devtools)
load_all()
check()
install()
library(devtools)
load_all()
install()
library('devtools')
load_all()
load_all()
check()
check()
check()
install()
load_all()
check()
install()
load_all()
library(devtools)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
install()
load_all()
check()
