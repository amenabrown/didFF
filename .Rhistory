iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "pupulation",
scale = "overallcountpc")
iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=NULL,
ending_year=NULL)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,nbins=NULL,
starting_year=NULL,
ending_year=NULL)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebin",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
View(df3)
rlang::last_error()
rlang::last_trace()
df2
df2<-iDiscretize(data,"statenum","wagebins","year","treated","population", "overallcountpc") #ok
df2
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
df2
rlang::last_trace()
df2<-iDiscretize(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc")
View(df2)
boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
View(bootdf)
bootdf<-boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
bootdf<-boot_id(df2,"id")
unique(bootdf$idvar)
unique(bootdf$bootstrap_id)
unique(data$id)
unique(data$statenum)
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2007,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
numBootstrapDraws = 1000,
starting_year=2010,
ending_year=2015)
load_all()
iDensityTest(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2007,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
load_all()
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2010,
ending_year=2015,
minbin=500,
maxbin=3000)
TestFunctionalForm(DF=data,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "population",
scale = "overallcountpc",
nboots = 1000, seed=0,
starting_year=2007,
ending_year=2015,
minbin=500,
maxbin=3000)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
check()
usethis::use_package("Hmisc")
load_all()
check()
install()
load_all()
install()
load_all()
install()
load_all()
install()
library(devtools)
use_r("iplotTable")
load_all()
check()
install()
load_all()
check()
load_all()
library(devtools)
load_all()
check()
install()
library(devtools)
load_all()
install()
library('devtools')
load_all()
load_all()
check()
check()
check()
install()
load_all()
check()
install()
load_all()
library(devtools)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
install()
load_all()
check()
library(devtools)
load_all()
check()
install()
library(TestFunctionalForm) #load the TestFunctional Form package
df<-TestFunctionalForm::Cengiz_df
load_all()
check()
library(TestFunctionalForm) #load the TestFunctional Form package
df<-TestFunctionalForm::Cengiz_df
## basic example code
TestFunctionalForm(DF=df,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "w",
nboots = 1000,
seed=0,
start_t=2007,
end_t=2015,
minbin=500,
maxbin=2999)
TestFunctionalForm(DF=df,
idvar="statenum", #State Number
yvar="wagebins", #Wage
tvar="year", #Time variable
treatmentvar = "treated", #Treatment status (0/1)
weight = "w", #Population at state-wagebin-year level
nboots = 1000, #Number of bootstratp for test
seed=0,
start_t=2007, #Pre-treatment period
end_t=2015, #Post-treatment period
minbin=500, #Plot Lower limit
maxbin=2999 #Plot Upper limit
)
TestFunctionalForm(DF=df,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "w",
nboots = 1000,
seed=0,
start_t=2007,
end_t=2015,
minbin=500,
maxbin=2999
)
TestFunctionalForm(DF=df,
idvar="statenum",
yvar="wagebins",
tvar="year",
treatmentvar = "treated",
weight = "w",
nboots = 1000,
seed=0,
start_t=2010,
end_t=2015,
minbin=500,
maxbin=2999
)
build_readme()
load_all()
check()
usethis::use_data(Cengiz_df)
usethis::use_data(Cengiz_df, overwritte=TRUE)
load_all()
install()
build_readme()
load_all()
check()
check()
resaveRdaFiles("data/Cengiz_df.rda",compress="xz")
library(tools)
resaveRdaFiles("data/Cengiz_df.rda",compress="xz")
check()
load_all()
check()
install()
build_readme()
install()
build_readme()
build_readme()
build_readme()
build_readme()
build_readme()
build_readme()
library(devtools)
load_all()
load_all()
check()
document()
library(devtools)
load_all()
check()
install()
load_all()
check()
install()
load_all()
load_all()
load
load_all()
load_all()
library(devtools)
load_all()
check()
install()
load_all()
check()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(didFF) #load the TestFunctional Form package
mw_df<-didFF::mw_df #load Cengiz et al. (2019) data frame
head(mw_df, 5)
test_2007_2015<-didFF(
DF=mw_df,
idvar="statenum", #panel id is state
yvar="wage",  #outcome is wage
tvar="year", #time period is year
treatmentvar = "treated", #treatment indicator
weight = "pop", #weight by population in each bin
start_t=2007, #pre-treatment year
end_t=2015,  #post-treatment year
lb_graph=5,
ub_graph=29.99
)
load_all()
load_all()
library(devtools)
load_all()
install()
check()
