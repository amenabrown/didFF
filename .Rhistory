use_package("glue")
use_package("ggplot2")
use_package("ggthemes")
use_pipe(export = TRUE) #For pipe operator
load_all()
set.seed(99)
N=10000
treat<-rbinom(N,1,0.25)
wage<-rlnorm(N, 13, 2)
id<-as.character(seq(1:N))
t0<-replicate(N,2010)
t1<-replicate(N,2020)
y0<-wage+rnorm(N,0,100)
y1<- y0 + 20*treat + rnorm(N,0,100)
panel_id=c(paste(id,t0,sep="_"),paste(id,t1,sep="_"))
year<-c(t0,t1)
y<-c(y0,y1)
D<-c(treat,treat)
treated<-c(replicate(N,0),treat)
ID<-c(id,id)
df<-data.frame(panel_id,ID,year,y,D,treated)
#Filter Data set
df<-df%>%
filter((0 <= y) & (y <= 500000))
library(dplyr)
df<-df%>%
filter((0 <= y) & (y <= 500000))
TestFunctionalForm(df,y,year,D,1000)
load_all()
TestFunctionalForm(df,y,year,D,1000)
detach("package:dplyr", unload = TRUE)
load_all()
TestFunctionalForm(df,y,year,D,1000)
check()
load_all()
TestFunctionalForm(df,y,year,D,1000)
load_all()
TestFunctionalForm(df,y,year,D,1000)
load_all()
TestFunctionalForm(df,y,year,D,1000)
load_all()
TestFunctionalForm(df,y,year,D,1000)
use_package("grid")
load_all()
load_all()
TestFunctionalForm(df,y,year,D,1000)
TestFunctionalForm(df,y,year,D,1000)
check()
use_package("tidyr")
load_all()
check()
check()
check()
check()
check()
check()
check()
use_mit_license()
load_all()
check()
load_all()
check()
load_all()
load_all()
load_all()
devtools::document()
load_all()
check()
devtools::document()
check()
devtools::document()
check()
TestFunctionalForm(df,y,year,D,1000)
devtools::document()
check()
?TestFunctionalForm
devtools::document()
check()
install()
library("devtools")
load_all()
set.seed(99)
N=10000
treat<-rbinom(N,1,0.25)
wage<-rlnorm(N, 13, 2)
id<-as.character(seq(1:N))
t0<-replicate(N,2010)
t1<-replicate(N,2020)
y0<-wage+rnorm(N,0,100)
y1<- y0 + 20*treat + rnorm(N,0,100)
panel_id=c(paste(id,t0,sep="_"),paste(id,t1,sep="_"))
year<-c(t0,t1)
y<-c(y0,y1)
D<-c(treat,treat)
treated<-c(replicate(N,0),treat)
ID<-c(id,id)
df<-data.frame(panel_id,ID,year,y,D,treated)
#Filter Data set
df<-df%>%
filter((0 <= y) & (y <= 500000))
TestFunctionalForm(df,y,year,D,1000)
load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
instal()
install()
library(TestFunctionalForm)
set.seed(99)
N=10000
treat<-rbinom(N,1,0.25)
wage<-rlnorm(N, 13, 2)
id<-as.character(seq(1:N))
t0<-replicate(N,2010)
t1<-replicate(N,2020)
y0<-wage+rnorm(N,0,100)
y1<- y0 + 20*treat + rnorm(N,0,100)
panel_id=c(paste(id,t0,sep="_"),paste(id,t1,sep="_"))
year<-c(t0,t1)
y<-c(y0,y1)
D<-c(treat,treat)
treated<-c(replicate(N,0),treat)
ID<-c(id,id)
df<-data.frame(panel_id,ID,year,y,D,treated)
df<-df%>%dplyr::filter((0 <= y) & (y <= 500000))
df
TestFunctionalForm(df,y,year,D,1000)
library(devtools)
devtools::document()
load_all()
devtools::check()
devtools::document()
devtools::document()
library(devtools)
load_all()
intall()
install()
library(devtools)
library(TestFunctionalForm)
set.seed(99)
N=10000
treat<-rbinom(N,1,0.25)
wage<-rlnorm(N, 13, 2)
id<-as.character(seq(1:N))
t0<-replicate(N,2010)
t1<-replicate(N,2020)
y0<-wage+rnorm(N,0,100)
y1<- y0 + 20*treat + rnorm(N,0,100)
panel_id=c(paste(id,t0,sep="_"),paste(id,t1,sep="_"))
year<-c(t0,t1)
y<-c(y0,y1)
D<-c(treat,treat)
treated<-c(replicate(N,0),treat)
ID<-c(id,id)
df<-data.frame(panel_id,ID,year,y,D,treated)
df<-df%>%dplyr::filter((0 <= y) & (y <= 500000))
TestFunctionalForm(df,y,year,D,1000)
library(devtools)
library(devtools)
load_all()
check()
use_readme_rmd()
check()
library(devtools)
build_readme()
check()
library(devtools)
use_r("boot_id")
use_r("iDensityTest")
use_r("lf_moment_inequality_test")
load_all()
set.seed(99)
N=10000
treat<-rbinom(N,1,0.25)
wage<-rlnorm(N, 13, 2)
id<-as.character(seq(1:N))
t0<-replicate(N,2010)
t1<-replicate(N,2020)
y0<-wage+rnorm(N,0,100)
y1<- y0 + 20*treat + rnorm(N,0,100)
panel_id=c(paste(id,t0,sep="_"),paste(id,t1,sep="_"))
year<-c(t0,t1)
y<-c(y0,y1)
D<-c(treat,treat)
treated<-c(replicate(N,0),treat)
ID<-c(id,id)
df<-data.frame(panel_id,ID,year,y,D,treated)
#Filter Data set
df<-df%>%
dplyr::filter((0 <= y) & (y <= 500000))
head(df)
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D")
df2<-iDiscretize(df,"ID","y","year,"D)
df2<-iDiscretize(df,"ID","y","year,"D")
iDiscretize(df,"ID","y","year,"D")
iDiscretize(df,"ID","y","year","D")
df2<-iDiscretize(df,"ID","y","year","D")
head(df2)
iDensity(df2)
df3<-iDensity(df2)
bootstrap_draw(df2,"ID")
j="ID"
df$j
bootstrap_draw(df2,"ID")
load_all()
bootstrap_draw(df2,"ID")
df2[["ID"]]
df2
bootstrap_draw(df2,"id")
load_all()
bootstrap_draw(df2,"id")
load_all()
bootstrap_draw(df2,"id")
load_all()
load_all()
bootstrap_draw(df2,"id")
bootdf<-bootstrap_draw(df2,"id")
head(bootdf)
head(df2)
df2[df2$id==2723]
df2[df2$id==2723,]
iDensityTest(df,"ID","y","year","D")
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D")
bootdf<-boot_id(df2,"id")
load_all()
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D")
load_all()
iDensityTest(df,"ID","y","year","D",1000,100)
iDensityTest(df,"ID","y","year","D",10000,10)
iDensityTest(df,"ID","y","year","D",10000,10)
load_all()
iDensityTest(df,"ID","y","year","D",1000,100)
iDensity(df)
iDensity(df2)
bresult<-iDensityTest(df,"ID","y","year","D",1000,100)
View(bresult)
bootdf[bootdf$level==44000,]
bootdf[bootdf$level==440000,]
bootdf[bresult$level==440000,]
bresult[bresult$level==440000,]
load_all()
iDensityTest(df,"ID","y","year","D",1000,100)
iDensityTest(df,"ID","y","year","D",10,10)
load_all()
iDensityTest(df,"ID","y","year","D",10,10)
iDensityTest(df,"ID","y","year","D",10000,10)
load_all()
iDensityTest(df,"ID","y","year","D",10000,10)
load_all()
iDensityTest(df,"ID","y","year","D",10000,10)
iDensityTest(df,"ID","y","year","D",1000,10)
load_all()
iDensityTest(df,"ID","y","year","D",1000,10)
load_all()
iDensityTest(df,"ID","y","year","D",1000,10)
bresult<-iDensityTest(df,"ID","y","year","D",1000,10)
head(bresult)
View(bresult)
load_all()
iDensityTest(df,"ID","y","year","D",1000,10)
iDensityTest(df,"ID","y","year","D",1000,1000)
load_all()
iDensityTest(df,"ID","y","year","D",1000,1000)
iDensityTest(df,"ID","y","year","D",1000,1000)
load_all()
iDensityTest(df,"ID","y","year","D",1000,1000)
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",1000,1000)
summary(sigma1)
sum(is.na(sigma1))
dim(sigma1)
isSymmetric(sigma1)
Cormat1 <- stats::cov2cor(sigma1)
isSymmetric(Cormat1)
sum(is.na(Cormat1))
load_all()
load_all()
load_all()
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",1000,1000)
sigma1
isSymmetric(sigma1)
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",1000,1000)
sigma1
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
sigma1
load_all()
sigma1
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
sigma1
sigma1<-iDensityTest(df,"ID","y","year","D",1000,10)
sigma1
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",1000,10)
isSymmetric(sigma1)
sum(is.na(sigma1))
dim(sigma1)
Cormat <- stats::cov2cor(sigma1)
isSymmetric(Cormat)
dim(Cormat)
sum(is.na(Cormat))
sigma1<-iDensityTest(df,"ID","y","year","D",500,100)
Cormat <- stats::cov2cor(sigma1)
sum(is.na(Cormat))
dim(Cormat)
isSymmetric(Cormat)
sims <- MASS::mvrnorm(n=numSims,
mu= 0*muhat,
Sigma = Cormat
)
df1<-iDiscretize(df,"ID","y","year","D",500)
implied_density_post_df <- iDensity(df1)
muhat = -implied_density_post_df$implied_density_post
sims <- MASS::mvrnorm(n=numSims,
mu= 0*muhat,
Sigma = Cormat
)
sims <- MASS::mvrnorm(n=10^5,
mu= 0*muhat,
Sigma = Cormat
)
length(sigma1)
dim(sigma1)
dim(sigma1)[1]
sims <- MASS::mvrnorm(n=500,
mu= 0*muhat,
Sigma = Cormat
)
Cormat <- stats::cov2cor(sigma1,
values_fill = 0)
Cormat[is.nan(Cormat)] = 0
sims <- MASS::mvrnorm(n=500,
mu= 0*muhat,
Sigma = Cormat
)
sims_max <- base::apply(X = sims, MARGIN = 1, FUN = max)
sims_max
p_value <- mean( sims_max >= max(muhat/sqrt(diag(sigma1))) )
p_value
max(muhat/sqrt(diag(sigma1)))
muhat
diag(sigma1)
is.0(diag(sigma1))
colSums(sigma1 != 0)
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",500,100)
sigma1
View(sigma1)
colSums(sigma1 != 0)
sigma1<-iDensityTest(df,"ID","y","year","D",500,10000)
colSums(sigma1 != 0)
muhat
max(muhat/sqrt(diag(sigma1)))
max(muhat/sqrt(diag(as.matrix(sigma1)))
..
max(muhat/sqrt(diag(as.matrix(sigma1))))
load_all()
pval<-iDensityTest(df,"ID","y","year","D",100,10000)
pval
pval<-iDensityTest(df,"ID","y","year","D",100,10000)
paste("\\textbf{p-value <", pval,"}")
load_all()
TestFunctionalForm(df,"ID","y","year","D",100,100)
load_all()
TestFunctionalForm(df,"ID","y","year","D",100,100)
load_all()
TestFunctionalForm(df,"ID","y","year","D",100,100)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
wide<-iDensity(df1)
wide
sy
sy=2020
wide[[glue::glue("{sy}_0")]]
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
TestFunctionalForm(df,"ID","y","year","D",10,10)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
TestFunctionalForm(df,"ID","y","year","D",10,10)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
iDensity(df2)
iDensity(df2,"year")
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
df2
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
iDiscretize(df,"ID","y","year","D",10)
df2<-iDiscretize(df,"ID","y","year","D",10)
iDensity(df2)
iDensityTest(df,"ID","y","year","D",10,10)
load_all()
iDensityTest(df,"ID","y","year","D",10,10)
load_all()
iDensityTest(df,"ID","y","year","D",10,10)
iDensityTest(df,"ID","y","year","D",10,100)
iDensityTest(df,"ID","y","year","D",10,1000)
load_all()
iDensityTest(df,"ID","y","year","D",10,1000)
colSums(sigma1 != 0)
dim(sigma1)
sigma1<-iDensityTest(df,"ID","y","year","D",10,1000)
colSums(sigma1 != 0)
dim(sigma1)
load_all()
sigma1<-iDensity(df,"ID","y","year","D",10,1000)
load_all()
sigma1<-iDensity(df,"ID","y","year","D",10,1000)
sigma1<-iDensityTest(df,"ID","y","year","D",10,1000)
dim(sigma1)
load_all()
rm(sigma)
rm(sigma1)
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
load_all()
br<-iDensityTest(df,"ID","y","year","D",10,10)
rm(id)
br<-iDensityTest(df,"ID","y","year","D",10,10)
View(br)
iden<-iDensityTest(df,"ID","y","year","D",10,10)
iden<-iDensityTest(df,"ID","y","year","D",10,10)
iden
load_all()
iden<-iDensityTest(df,"ID","y","year","D",10,10)
iden
discrete<-iDiscretize(df,"ID","y","year","D",10)
discrete
density<-(discrete)
density
density<-iDensity(discrete)
density
discrete
rm(density)
load_all()
density<-iDensity(discrete)
load_all()
load_all()
density<-iDensity(discrete)
density
unique(density$level)
rm(level)
unique(discrete$level)
load_all()
density<-iDensity(discrete)
unique(density$level)
load_all()
density<-iDensity(discrete)
unique(density$level)
iden<-iDensityTest(df,"ID","y","year","D",10,10)
iden
load_all()
BR<-iDensityTest(df,"ID","y","year","D",10,10)
br
BR
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
sigma1
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
load_all()
sigma1<-iDensityTest(df,"ID","y","year","D",10,10)
digma1
sigma1
load_all()
pval1<-iDensityTest(df,"ID","y","year","D",10,10)
pval1
load_all()
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
load_all()
TestFunctionalForm(df,"ID","y","year","D",10,10)
document()
check()
load_all()
check()
?TestFunctionalForm
usethis::use_package("ggplot2")
usethis::use_package("MASS")
usethis::use_package("latex2exp")
usethis::use_package("purrr")
document()
load_all()
check()
library(devtools)
check()
install.packages("ggplot2")
install.packages("ggplot2")
